#!/usr/bin/env python3

import os
import sys
import jeffos
import subprocess
import signal
from datetime import datetime
from jeffos.color import colored, OK
from collections import Counter

_aliases = {
    "move": "mv",
    "dir": "ls"
}

_background_processes = {}

_is_running = True

def handle_signal(signum, frame):
    global _is_running
    print(OK+"ctrl-c was pressed")
    print("press enter")
    _is_running = False

signal.signal(signal.SIGINT, handle_signal)

# FIXME: doesn't work, since we don't save output
# looks for special messages designed for command line
def look_for_messages(output):
    if "$PRINT_aliases" in output:
        print(_aliases)
    if "$PRINT_background_processes" in output:
        print(_background_processes)
    return output

def run_app(path, args):
    if args != "":
        args = args.split(" ")
    else:
        args = []
    subprocess.call([path] + args)
    # reload working dir
    os.chdir(jeffos.getcwd())

def run_app_in_background(path, args):
    p = subprocess.Popen([path] + args.split(" "))
    index = str(len(_background_processes))
    _background_processes[path+'['+index+']'] = p

def did_you_mean(app_name):
    apps_path = jeffos.OS_PATH+"sys/bin/"
    files = os.listdir(apps_path)
    rated_files = {}
    for f in files:
        rated_files[f] = sum((Counter(f) & Counter(app_name)).values())
    rated_files = list(rated_files.items())
    rated_files = sorted(rated_files, key=lambda x: x[1])
    rated_files.reverse()
    rated_files = rated_files[0:2]
    print("did you mean", end="")
    for f in rated_files:
        print(" "+colored(f[0], "cyan"), end="")
    print("?")

def parse_input(i, history):
    if not _is_running:
        return

    look_for_messages(i)

    args = i.split(" ")
    app_name = args[0]
    args.pop(0)
    if app_name in _aliases.keys():
        app_name = _aliases[i]
    args = " ".join(args)

    history.write(i+"\n")

    if os.path.isfile(jeffos.OS_PATH+"/sys/bin/"+app_name):
        if len(args) != 0 and args[-1] == "&":
            args.replace("&", "")
            run_app_in_background(jeffos.OS_PATH+"/sys/bin/"+app_name, args)
        else:
            run_app(jeffos.OS_PATH+"/sys/bin/"+app_name, args)
    elif i == "exit" or i == "quit":
        return False
    else:
        # app not found
        i = colored(i, "blue")
        print(f"app '{i}' not found")
        did_you_mean(app_name)

def main():
    print(OK+"launching command line")
    print("type help for basic info")

    os.chdir(jeffos.OS_PATH)

    history = open(jeffos.OS_PATH+"usr/cmd_history.txt", "a")
    history.write("starting session "+datetime.now().strftime("%d-%m-%Y %H:%M")+"\n")

    global _is_running
    while _is_running:
        inp = input(colored("cmd>", "yellow"))
        inp = inp.strip()
        if inp == "":
            continue
        parse_input(inp, history)

    history.close()
        
    print(OK+"closing terminal")

if __name__ == "__main__":
    main()